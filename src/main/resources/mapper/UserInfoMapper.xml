<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookstore.haid.mapper.UserInfoMapper">
    <resultMap id="userMap" type="com.bookstore.haid.model.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="phone" column="phone"/>
        <result property="location" column="location"/>
        <result property="detail_address" column="detail_address"/>
        <result property="email" column="email"/>
        <result property="zip_code" column="zip_code"/>
        <result property="identity" column="identity"/>
        <result property="roleId" column="role_id"/>
        <collection property="address" ofType="com.bookstore.haid.model.Address">
            <id property="id" column="addressId"/>
            <result property="user_id" column="user_id"/>
            <result property="province" column="province"/>
            <result property="city" column="city"/>
            <result property="area" column="area"/>
            <result property="detail_address" column="detail_address"/>
            <result property="receiver" column="receiver"/>
            <result property="tel" column="tel"/>
            <result property="is_default" column="is_default"/>
        </collection>
    </resultMap>
    <select id="findUserByUsername" resultMap="userMap">
        select bu.id,
               bu.username,
               bu.password,
               bu.name,
               bu.sex,
               bu.phone,
               bu.location,
               bu.email,
               bu.zip_code,
               bu.identity,
               ba.id addressId,
               ba.user_id,
               ba.province,
               ba.city,
               ba.area,
               ba.detail_address,
               ba.receiver,
               ba.tel,
               ba.is_default
        from book_user bu,
             book_address ba
        where bu.username = ba.user_id
          and username = #{username};
    </select>
    <update id="updateUser">
        update book_user
        <set>
            <if test="name != null and name != ''">
                name =#{name},
            </if>
            <if test="sex != null and sex != ''">
                sex=#{sex},
            </if>
            <if test="phone != null and phone != ''">
                phone=#{phone},
            </if>
            <if test="email != null and email != ''">
                email=#{email},
            </if>
            <if test="zip_code != null and zip_code != ''">
                zip_code=#{zip_code},
            </if>
            <if test="location != null and location != ''">
                location=#{location},
            </if>
            <if test="detail_address != null and detail_address != ''">
                detail_address=#{detail_address},
            </if>
            <if test="identity != null and identity != ''">
                identity=#{identity},
            </if>
            <if test="roleId != null and roleId != ''">
                role_id=#{roleId}
            </if>
        </set>
        where username = #{username}
    </update>
    <update id="updatepwd">
        update book_user
        set password=#{password}
        where username = #{username}
    </update>
    <select id="checkPwd" resultMap="userMap">
        select password
        from book_user
        where username = #{username}
    </select>
    <select id="findAllUser" resultMap="userMap">
        select *
        from book_user
        <where>
            <if test="keywords != null and keywords != ''">
                (username like concat('%', #{keywords}, '%')
                        or email like concat('%', #{keywords}, '%')
                        or name like concat('%', #{keywords}, '%'))
            </if>
        </where>
    </select>
    <delete id="deleteById">
        delete
        from book_user
        where id = #{id}
    </delete>
    <insert id="addUser">
        insert into book_user (username, password, name, sex, phone, location, detail_address, email, zip_code,
                               identity, role_id)
        values (#{username}, #{password}, #{name}, #{sex}, #{phone}, #{location}, #{detail_address}, #{email},
                #{zip_code}, #{identity}, #{roleId})
    </insert>
    <select id="findUserById" resultMap="userMap">
        select *
        from book_user
        where id = #{id}
    </select>
    <select id="findUser" resultMap="userMap">
        select *
        from book_user
        where username = #{username}
    </select>
    <select id="selectAllRole" resultType="com.bookstore.haid.model.Role">
        select id, name, sn
        from book_role
    </select>
</mapper>